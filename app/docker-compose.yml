
version: "2.1"

services:
  # app:
  #   build: .
  #   command: python udp-server.py
  #   ports:
  #     - "5000:5000"
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - clone
  #     - repo
  # clone:
  #   build: .
  #   command: git clone https://github.com/guilhermebrida/Docker_python.git
  #   volumes:
  #     - .:/app
  #   working_dir: /app
  # install_git:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile-git

  postgres: 
    image: postgres:14-alpine3.15
    ports: ["5432:5432"]
    networks: [backing-services] 
    volumes: [./app:/data]
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    hostname: "ec2-3-85-175-98.compute-1.amazonaws.com"

  grafana:
    image: grafana/grafana-oss:latest
    ports: ["3000:3000"]
    networks: [backing-services]
    volumes: ["./app:/grafana_data"]
    hostname: "ec2-3-85-175-98.compute-1.amazonaws.com"

  # repo:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile

networks: 
  backing-services:
    driver: bridge



# version: "3"

# services:
#   app:
#     build: .
#     ports:
#       - "5000:5000"
#     depends_on:
#       - clone
#       - postgres
#     volumes:
#       - .:/app
#     environment:
#       DATABASE_URL: "postgres://postgres:postgres@postgres:5432/postgres"
#       APP_ENV: "production"
#     command: python app.py

#   clone:
#     build:
#       context: .
#       dockerfile: Dockerfile-git
#     volumes:
#       - .:/app
#     working_dir: /app
#     command: git clone https://github.com/guilhermebrida/Docker_python.git

#   postgres:
#     image: postgres:14-alpine3.15
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres-data:/var/lib/postgresql/data
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_DB: postgres

#   grafana:
#     image: grafana/grafana-oss:latest
#     ports:
#       - "3000:3000"

# volumes:
#   postgres-data:
